@using Phoenix.Services
@inject Phoenix.Services.IBTProjectService projectService
@inject Microsoft.AspNetCore.Identity.UserManager<BTUser> _userManager
@model Phoenix.Models.ViewModels.DashboardViewModel
@inject IBTRoleService roleService

@{
    ViewData["Title"] = "Dashboard";
    var user = await _userManager.GetUserAsync(User);
   

}
<div class="container-fluid">
<div class="row layout-top-spacing">
    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 layout-spacing">    
        <div class="card">
            <div class="card-body">
                <div class="row widget-statistic">
                    <div class="col-xl-3 col-lg-4 col-md-4 col-sm-4 col-12">
                        <div class="widget widget-one_hybrid widget-referral" style="height: 175px">
                            <div class="widget-heading">
                                <div class="w-icon">
                                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" focusable="false" width="1em" height="1em" style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><g fill="none" stroke="#626262" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10" /><path d="M12 8v4" /><path d="M12 16h.01" /></g></svg>
                                </div>
                                <p class="newTicket w-value">@Model.Tickets.Where(t => t.TicketPriority.Name == "Urgent").Count()</p>
                                <h5><p class="newTicket">Critical Tickets</p></h5>
                            </div>

                        </div>
                    </div>
                    <div class="col-xl-3 col-lg-4 col-md-4 col-sm-4 col-12">
                        <div class="widget widget-one_hybrid widget-followers" style="height: 175px">
                            <div class="widget-heading">
                                <div class="w-icon">
                                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" focusable="false" width="1em" height="1em" style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><g fill="none" stroke="#626262" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2" /><circle cx="8.5" cy="7" r="4" /><path d="M18 8l5 5" /><path d="M23 8l-5 5" /></g></svg>
                                </div>
                                <p class="newTicket w-value">@Model.Tickets.Where(t => t.DeveloperUser == null).Count()</p>
                                <h5><p class="newTicket">Unassigned Tickets</p></h5>
                            </div>

                        </div>
                    </div>
                    <div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-12">
                        <div class="widget widget-one_hybrid widget-engagement" style="height: 175px">
                            <div class="widget-heading">
                                <div class="newTicket w-icon">
                                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" focusable="false" width="1em" height="1em" style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><g fill="none" stroke="#626262" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M1 12s4-8 11-8s11 8 11 8s-4 8-11 8s-11-8-11-8z" /><circle cx="12" cy="12" r="3" /></g></svg>
                                </div>
                                <p class="newTicket w-value">@Model.Tickets.Where(t => t.TicketStatus.Name == "New").Count()</p>
                                <h5><p class="newTicket">New Tickets</p></h5>
                            </div>

                        </div>
                    </div>
                    <div class="col-xl-3 col-lg-3 col-md-3 col-sm-3 col-12">
                        <div class="widget widget-one_hybrid widget-new" style="height: 175px">
                            <div class="widget-heading">
                                <div class="newTicket w-icon">
                                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" focusable="false" width="1em" height="1em" style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><g fill="none" stroke="#626262" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14" /><path d="M22 4L12 14.01l-3-3" /></g></svg>
                                </div>
                                <p class="newTicket w-value">@Model.Tickets.Where(t => t.TicketStatus.Name == "Closed").Count()</p>
                                <h5><p class="newTicket">Resolved Tickets</p></h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
            </div>
        </div>
    </div>
       <div class="container-fluid">
            <div class="row layout-top-spacing">
                <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 layout-spacing">
                    <div class="row">
                        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-12">
                            <div class="card" style="background-color:aliceblue">
                                <div class="card-body">
                                    <h4 class="newTicket card-title mb-0 text-center">Ticket Priority</h4>
                                </div>
                                <canvas id="myChart3" style="height: 300px"></canvas>
                            </div>
                        </div>



                        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-12">
                            <div class="card" style="background-color:aliceblue">
                                <div class="card-body">
                                    <h4 class="newTicket card-title mb-0 text-center">Ticket Status</h4>
                                </div>
                                <canvas id="myChart" style="height: 300px"></canvas>
                            </div>
                        </div>



                        <div class="col-xl-4 col-lg-4 col-md-4 col-sm-4 col-12">
                            <div class="card" style="background-color:aliceblue">
                                <div class="card-body">
                                    <h4 class="newTicket card-title mb-0 text-center">Ticket Type</h4>
                                </div>
                                <canvas id="myChart2" style="height: 300px"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
           </div>

            <div class="row layout-top-spacing">               
                <div class="col-xl-12 col-lg-12 col-sm-12  layout-top-spacing">
                    <div class="widget-content widget-content-area br-6" style="background-color:aliceblue">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="card" style="background-color:aliceblue">
                                    <div class="card-body" style="background-color:aliceblue">
                                        <h3 class="newTicket card-title mb-0">Summary of Current Projects</h3>
                                    </div>
                                    <div class="table-responsive mb-4 mt-4" style="background-color:aliceblue">
                                        <table id="zero-config" class="table table-hover" style="width:100%">
                                            <thead>
                                                <tr>
                                                    <th class="newTicket">Name</th>
                                                    <th>Member Count</th>
                                                    <th>Ticket Count</th>
                                                    <th>Company Id</th>
                                                    <th>Description</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var ticket in Model.Projects)
                                                {
                                                    <tr>
                                                        <td ><p class="newTicket">@ticket.Name</p></td>
                                                        <td><p class="newTicket">@ticket.Members.Count</p></td>
                                                        <td><p class="newTicket">@ticket.Tickets.Count</p></td>
                                                        <td><p class="newTicket">@ticket.Company.Name</p></td>
                                                        <td><p class="newTicket">@ticket.Description</p></td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

       
        @*Footer*@
        <div class="footer-wrapper">
            <div class="oldTicket">
                <p class="oldTicket">Copyright © 2021 Phoenix Issue Tracker, All rights reserved.</p>
            </div>
            <div class="oldTicket">
                <p class="oldTicket">Coded with <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="green" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-heart"><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path></svg> by <a style="color:lightgreen" href="https://michellelongworth-portfolio.netlify.app/" target="_blank">Michelle Longworth</a></p>
            </div>
        </div>

        @section Scripts {
            <script src="//cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"></script>
            <script src="~/plugins/table/datatable/datatables.js"></script>
            <script>
                $('#zero-config').DataTable({
                    "oLanguage": {
                        "oPaginate": { "sPrevious": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-left"><line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline></svg>', "sNext": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-right"><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg>' },
                        "sInfo": "Showing page _PAGE_ of _PAGES_",
                        "sSearch": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-search"><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg>',
                        "sSearchPlaceholder": "Search...",
                        "sLengthMenu": "Results :  _MENU_",
                    },
                    "stripeClasses": [],
                    "lengthMenu": [7, 10, 20, 50],
                    "pageLength": 7
                });
            </script>

            @*Chart 1 Bar Chart*@
            <script>
           var Url3 = '@Url.Action("StatusChart", "Charts")';
             $.post(Url3).then(function (response) {
                 var ctx = document.getElementById('myChart').getContext('2d');
                 var barChartData = {
                     labels: response.labels,
                     datasets: [{
                         label: 'Status',
                         data: response.data,
                         backgroundColor: response.backgroundColors,
                         hoverOffset: 4
                     }]
                 };
                 var myChart = new Chart(ctx, {
                     type: 'bar',
                     data: barChartData
                })
              

            });
            </script>

            @*Chart 2 PolarArea Chart*@
            <script>
            var Url2 = '@Url.Action("TypeChart", "Charts")';
             $.post(Url2).then(function (response) {
             var ctx = document.getElementById('myChart2').getContext('2d');
                 var polarChartData = {
                     labels: response.labels,
                     datasets: [{
                         label: 'Tickets By Type',
                         data: response.data,
                         backgroundColor: response.backgroundColors,
                         hoverOffset: 4
                     }]
                 };
                 var myChart2 = new Chart(ctx,
                     {
                         type: 'polarArea',
                         data: polarChartData
                     })
                 });
            </script>

            @*Chart 3 Doughnut Chart*@
            <script>
            //Step 1 generate the Url that we will call to get JSON
            var Url1 = '@Url.Action("PriorityChart", "Charts")'; //represents the endpoint ( action + controller) that we want to hit

            //Step 2 start the structure for our AJAX call
            $.post(Url1).then(function (response) {
                //Get the context/canvas for the chart
                var ctx = document.getElementById('myChart3').getContext('2d');
                //Use The JSON response to create the data property of the chart
                var doughnutChartData = {
                    labels: response.labels,
                    datasets: [{
                        label: 'Tickets By Priority',
                        data: response.data,
                        backgroundColor: response.backgroundColors,
                        hoverOffset: 4
                    }]
                };
                var myChart3 = new Chart(ctx, {
                    type: 'doughnut',
                    data: doughnutChartData
                })
            });
            </script>

        }
